services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend


  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ['CMD-SHELL', 'curl -s http://localhost:9200/_cluster/health | grep -q "\"status\":\"green\"" || exit 1']
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - backend


  app:
    build: .
    command: bundle exec puma -C config/puma.rb
    user: root
    volumes:
      - .:/rails
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - elasticsearch
    networks:
      - backend

  sidekiq:
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/rails
    working_dir: /rails
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - backend

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - backend

volumes:
  db_data:
  redis_data:
  esdata:


networks:
  backend:
    driver: bridge